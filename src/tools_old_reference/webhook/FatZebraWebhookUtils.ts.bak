// Utility functions for Fat Zebra webhook tools

import fetch from "node-fetch";
import { Tool } from "@modelcontextprotocol/sdk";

// Extend ToolBase for SDK integration
export class FatZebraWebhookUtils extends Tool {
  constructor() {
    super();
    // Additional initialization if needed
  }

  async checkWebhooksApiAvailability(baseUrl: string, username: string, token: string): Promise<boolean> {
    try {
      const url = `${baseUrl}/webhooks`;
      console.log(`Checking webhooks API availability at ${url}`);

      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Accept': 'application/json',
          'Authorization': `Basic ${Buffer.from(`${username}:${token}`).toString('base64')}`,
        },
      });

      if (response.status === 404) {
        console.log('Webhooks API is not available (404 Not Found)');
        return false;
      }

      return true;
    } catch (error) {
      console.error('Error checking webhooks API availability:', error);
      return false;
    }
  }

  getWebhooksApiUnavailableError() {
    return {
      successful: false,
      errors: [
        "Webhook functionality is not available in the current Fat Zebra environment (404 Not Found). " +
        "Based on the Fat Zebra documentation, the webhooks endpoint should be at /webhooks, but this " +
        "endpoint is not accessible in the current environment. " +
        "This may be because webhooks are not supported in the sandbox environment, " +
        "or because additional configuration is required. " +
        "Please refer to the Fat Zebra documentation at https://docs.fatzebra.com/reference/webhooks for more information."
      ]
    };
  }
}

// Correcting the export of utility functions
export const checkWebhooksApiAvailability = FatZebraWebhookUtils.prototype.checkWebhooksApiAvailability;
export const getWebhooksApiUnavailableError = FatZebraWebhookUtils.prototype.getWebhooksApiUnavailableError;

